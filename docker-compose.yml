services:
    laravel-app:
        build:
            context: './docker/8.3'
            dockerfile: Dockerfile
            args:
                WWWGROUP: '${WWWGROUP}'
        image: 'sail-8.3/app'
        extra_hosts:
            - 'host.docker.internal:host-gateway'
        ports:
            - '${APP_PORT:-80}:80'
            - '${VITE_PORT:-5173}:${VITE_PORT:-5173}'
        environment:
            WWWUSER: '${WWWUSER}'
            LARAVEL_SAIL: 1
            XDEBUG_MODE:   '${SAIL_XDEBUG_MODE:-off}'
            XDEBUG_CONFIG: '${SAIL_XDEBUG_CONFIG:-client_host=host.docker.internal}'
            IGNITION_LOCAL_SITES_PATH: '${PWD}'
            DEBUGBAR_ENABLED: '${DEBUGBAR_ENABLED:-false}'
        volumes:
            - '.:/var/www/html'
        networks:
            - sail
            - web
        depends_on:
            - mysql
            - selenium
        # Here we define our settings for traefik how to proxy our service.
        labels:
            # This is enableing treafik to proxy this service
            - 'traefik.enable=true'
            # Here we have to define the URL
            # More details https://doc.traefik.io/traefik/v2.0/routing/routers/#rule
            - 'traefik.http.routers.laravel-app.rule=Host(`${APP_URL_SUBDOMAIN}`) || HostRegexp(`{subdomain:[a-z]+}.${APP_URL_SUBDOMAIN}}`)'
            # Here we are defining wich entrypoint should be used by clients to access this service
            # - 'traefik.http.routers.laravel-app.entrypoints=web'
            # Here we define in wich network treafik can find this service
            - 'traefik.docker.network=web'
            # This is the port that traefik should proxy
            - 'traefik.http.services.laravel-app.loadbalancer.server.port=80'
    selenium:
        image: 'selenium/standalone-chrome'
        extra_hosts:
            - 'host.docker.internal:host-gateway'
        volumes:
            - '/dev/shm:/dev/shm'
        ports:
            - '${FORWARD_SELENIUM_PORT:-444}:4444'
            - '${FORWARD_SELENIUM_HEADFUL_PORT:-7900}:7900'
        networks:
            - sail
   
    mailhog:
        image: "mailhog/mailhog:latest"
        ports:
            - "1025:1025"  # SMTP
            - "8025:8025"  # Web interface
        networks:
            - sail
        
    mysql:
        image: 'mysql/mysql-server:8.0'
        ports:
            - '${FORWARD_DB_PORT:-3306}:3306'
        environment:
            MYSQL_ROOT_PASSWORD: '${DB_PASSWORD}'
            MYSQL_ROOT_HOST: '%'
            MYSQL_DATABASE: '${DB_DATABASE}'
            MYSQL_USER: '${DB_USERNAME}'
            MYSQL_PASSWORD: '${DB_PASSWORD}'
            MYSQL_ALLOW_EMPTY_PASSWORD: 1
        volumes:
            - 'sail-mysql:/var/lib/mysql'
            - './docker/mysql/create-testing-database.sh:/docker-entrypoint-initdb.d/10-create-testing-database.sh'
        networks:
            - sail
        healthcheck:
            test:
                - CMD
                - mysqladmin
                - ping
                - '-p${DB_PASSWORD}'
            retries: 3
            timeout: 5s
networks:
    sail:
        driver: bridge
    web:
        external: true
volumes:
    sail-mysql:
        driver: local
